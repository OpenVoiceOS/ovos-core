name: Run End2End tests
on:
  pull_request:
    branches:
      - dev
    paths-ignore:
      - 'ovos_core/version.py'
      - 'examples/**'
      - '.github/**'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'MANIFEST.in'
      - 'readme.md'
      - 'scripts/**'
  push:
    branches:
      - master
    paths-ignore:
      - 'ovos_core/version.py'
      - 'requirements/**'
      - 'examples/**'
      - '.github/**'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'MANIFEST.in'
      - 'readme.md'
      - 'scripts/**'
  workflow_dispatch:

jobs:
  end2end_tests:
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.9]
    runs-on: ubuntu-latest
    timeout-minutes: 35
    steps:
      - uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt install python3-dev swig libssl-dev
          python -m pip install build wheel
      - name: Install test dependencies
        run: |
          pip install -r requirements/tests.txt
          pip install ./test/integrationtests/common_query/ovos_tskill_fakewiki
          pip install ./test/end2end/skill-ovos-hello-world
          pip install ./test/end2end/skill-ovos-fallback-unknown
          pip install ./test/end2end/skill-ovos-slow-fallback
          pip install ./test/end2end/skill-converse_test
          pip install ./test/end2end/skill-ovos-schedule
          pip install ./test/end2end/skill-new-stop
          pip install ./test/end2end/skill-old-stop
          pip install ./test/end2end/skill-fake-fm
          pip install ./test/end2end/skill-fake-fm-legacy
          pip install ./test/end2end/skill-ovos-fakewiki
          pip install ./test/end2end/metadata-test-plugin
      - name: Install core repo
        run: |
          pip install -e .[plugins] ovos-bus-client==1.0.0
      - name: Run end2end tests
        run: |
          pytest --cov-append --cov=ovos_core --cov-report xml test/end2end
      - name: Upload coverage
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          fail_ci_if_error: true
          files: ./coverage.xml,!./cache
          flags: end2end
          name: codecov-end2end
          verbose: true
